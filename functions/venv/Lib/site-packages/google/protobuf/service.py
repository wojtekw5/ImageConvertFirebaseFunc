# DEPRECATED:  Declares the RPC service interfaces.

# The rest of the docstring and import statements are here.

class RpcException(Exception):
    """Exception raised on failed blocking RPC method call."""
    pass


class Service(object):
    """Abstract base interface for protocol-buffer-based RPC services."""

    def GetDescriptor(self):
        """Retrieves this service's descriptor."""
        raise NotImplementedError

    def CallMethod(self, method_descriptor, rpc_controller, request, done):
        """Calls a method of the service specified by method_descriptor."""
        raise NotImplementedError  # <== Poprawione wciÄ™cie (brak dodatkowej spacji)

    def GetRequestClass(self, method_descriptor):
        """Returns the class of the request message for the specified method."""
        raise NotImplementedError

    def GetResponseClass(self, method_descriptor):
        """Returns the class of the response message for the specified method."""
        raise NotImplementedError

class RpcController(object):
    """An RpcController mediates a single method call."""

    def Reset(self):
        """Resets the RpcController to its initial state."""
        raise NotImplementedError

    def Failed(self):
        """Returns true if the call failed."""
        raise NotImplementedError

    def ErrorText(self):
        """If Failed is true, returns a human-readable description of the error."""
        raise NotImplementedError

    def StartCancel(self):
        """Initiate cancellation."""
        raise NotImplementedError

    def SetFailed(self, reason):
        """Sets a failure reason."""
        raise NotImplementedError

    def IsCanceled(self):
        """Checks if the client cancelled the RPC."""
        raise NotImplementedError

    def NotifyOnCancel(self, callback):
        """Sets a callback to invoke on cancel."""
        raise NotImplementedError

class RpcChannel(object):
    """Abstract interface for an RPC channel."""

    def CallMethod(self, method_descriptor, rpc_controller,
                   request, response_class, done):
        """Calls the method identified by the descriptor."""
        raise NotImplementedError
